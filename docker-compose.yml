version: '3.8'

services:
  emotionmemcore:
    build: .
    container_name: emotionmemcore-api
    ports:
      - "8000:8000"
    environment:
      # 基本設定
      - ENVIRONMENT=production
      - DEBUG_MODE=false
      - HOST=0.0.0.0
      - PORT=8000
      
      # LLM設定
      - LLM_MOCK_MODE=false
      - LLM_PROVIDER=claude
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ANTHROPIC_MODEL=claude-3-haiku-20240307
      
      # Embedding設定
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_EMBEDDING_MODEL=text-embedding-3-small
      
      # データベース設定
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma_db
      - MEMORY_COLLECTION_NAME=emotion_memories
      
      # セキュリティ設定
      - AUTH_ENABLED=true
      - MASTER_API_KEY=${MASTER_API_KEY}
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_RPM=60
      - RATE_LIMIT_RPH=1000
      
      # CORS設定
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://yourdomain.com}
      
    volumes:
      # データの永続化
      - emotionmemcore_data:/app/data
      - emotionmemcore_logs:/app/logs
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Nginx リバースプロキシ（オプション）
  nginx:
    image: nginx:alpine
    container_name: emotionmemcore-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - emotionmemcore
    restart: unless-stopped
    profiles:
      - nginx

  # Prometheus監視（オプション）
  prometheus:
    image: prom/prometheus:latest
    container_name: emotionmemcore-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana（オプション）
  grafana:
    image: grafana/grafana:latest
    container_name: emotionmemcore-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  emotionmemcore_data:
    driver: local
  emotionmemcore_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    driver: bridge